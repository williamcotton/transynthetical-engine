{
  "exemplars": [
    {
      "augmentedPrompt": "Context()\nInstructions: get the index number of number 456 in the list 123, 456, 789 - ",
      "completion": "{\n  \"pthunk\": \"(async function solution(query, archiver, document) {\\n    const answer = `index_of({123, 456, 789}, 456)`;\\n    return {\\n        answer,\\n        solutions: [],\\n        computed: true,\\n        query: false,\\n    };\\n}\\n)\"\n}"
    },
    {
      "augmentedPrompt": "Context()\nInstructions: join the strings \"a\", \"b\", and \"c\" with a period between each - ",
      "completion": "{\n  \"pthunk\": \"(async function solution(query, archiver, document) {\\n    const answer = `textjoin(\\\".\\\", {\\\"a\\\", \\\"b\\\", \\\"c\\\"}) => \\\"a.b.c\\\"`;\\n    return {\\n        answer,\\n        solutions: [],\\n        computed: true,\\n        query: false,\\n    };\\n}\\n)\"\n}"
    },
    {
      "augmentedPrompt": "Context()\nInstructions: sort the list {\"abc\", \"d\", \"ef\"} by the number of characters in each string - ",
      "completion": "{\n  \"pthunk\": \"(async function solution(query, archiver, document) {\\n    const answer = `sort({\\\"abc\\\", \\\"d\\\", \\\"ef\\\"}, count($value))`;\\n    return {\\n        answer,\\n        solutions: [],\\n        computed: true,\\n        query: false,\\n    };\\n}\\n)\"\n}"
    },
    {
      "augmentedPrompt": "Context()\nInstructions: get the sum of the numbers 1, 2, and the maximum of 1 and 3 and the minimum of 1, 2, and 3 - ",
      "completion": "{\n  \"pthunk\": \"(async function solution(query, archiver, document) {\\n    const answer = `sum({1, 2, max(1, min(3, 1, 2), 2)})`;\\n    return {\\n        answer,\\n        solutions: [],\\n        computed: true,\\n        query: false,\\n    };\\n}\\n)\"\n}"
    },
    {
      "augmentedPrompt": "Context()\nInstructions: double each number in the list 1, 2, 3 - ",
      "completion": "{\n  \"pthunk\": \"(async function solution(query, archiver, document) {\\n    const answer = `map({1, 2, 3}, $value * 2)`;\\n    return {\\n        answer,\\n        solutions: [],\\n        computed: true,\\n        query: false,\\n    };\\n}\\n)\"\n}"
    },
    {
      "augmentedPrompt": "Context()\nInstructions: filter the list 2, 3, 1, 4 to only include numbers less than 3 - ",
      "completion": "{\n  \"pthunk\": \"(async function solution(query, archiver, document) {\\n    const answer = `filter({2, 3, 1, 4}, $value < 3)`;\\n    return {\\n        answer,\\n        solutions: [],\\n        computed: true,\\n        query: false,\\n    };\\n}\\n)\"\n}"
    },
    {
      "augmentedPrompt": "Context()\nInstructions: multiply all the numbers in the list 1, 2, 3, 4 - ",
      "completion": "{\n  \"pthunk\": \"(async function solution(query, archiver, document) {\\n    const answer = `reduce({1, 2, 3, 4}, 1, $summary * $value)`;\\n    return {\\n        answer,\\n        solutions: [],\\n        computed: true,\\n        query: false,\\n    };\\n}\\n)\"\n}"
    }
  ],
  "preamble": "Context() Instructions: natural language instructions -  {\"pthunk\":%%%PTHUNK%%%}  Use the natural language instructions to write IQLang in the %%%PTHUNK%%% IQLang is a lisp like language. Do not answer in Markdown. Always answer with IQLang compatible code in the %%%PTHUNK%%%. Always answer with this JSON compatible object form: {\"pthunk\":%%%PTHUNK%%%}",
  "augmentedPrompt": ""
}